name: Deploy to Server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Detect package manager
        id: detect_pm
        shell: bash
        run: |
          FILE="$GITHUB_WORKSPACE/package.json"
          PM=$(node -p "try{require(process.env.GITHUB_WORKSPACE + '/package.json').packageManager||''}catch(e){''}") || true
          echo "Detected packageManager: $PM (from $FILE)"
          echo "pm=$PM" >> "$GITHUB_OUTPUT"

      - name: Stop service
        run: sudo systemctl stop kleats || true

      - name: Sync code to deployment directory (/root/kleatsv2)
        run: |
          sudo mkdir -p /root/kleatsv2
          if ! command -v rsync >/dev/null 2>&1; then \
            echo "rsync not found; installing"; \
            sudo apt-get update -y && sudo apt-get install -y rsync; \
          fi
          # Sync repo while preserving server-only files and persistent assets
          # - Keep: .env*, public/uploads, existing node_modules if any (we'll reinstall), and .next will be rebuilt
          sudo rsync -a --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='node_modules' \
            --exclude='.next' \
            --exclude='.env' \
            --exclude='.env.local' \
            --exclude='.env.production' \
            --exclude='.env.*' \
            --exclude='public/uploads' \
            "$GITHUB_WORKSPACE/" /root/kleatsv2/

      - name: Install dependencies (yarn)
        if: contains(steps.detect_pm.outputs.pm, 'yarn')
        run: sudo -n env PATH="$PATH" YARN_CACHE_FOLDER="$YARN_CACHE_FOLDER" bash -lc 'cd /root/kleatsv2 && corepack yarn install --immutable || corepack yarn install'

      - name: Install dependencies (pnpm)
        if: contains(steps.detect_pm.outputs.pm, 'pnpm')
        run: sudo -n env PATH="$PATH" PNPM_HOME="$PNPM_HOME" bash -lc 'cd /root/kleatsv2 && corepack pnpm install --frozen-lockfile'

      - name: Install dependencies (npm fallback)
        if: steps.detect_pm.outputs.pm == ''
        run: sudo -n env PATH="$PATH" bash -lc 'cd /root/kleatsv2 && if [ -f package-lock.json ]; then npm ci; else npm install; fi'

      - name: Clean previous build artifacts
        run: sudo -n bash -lc 'cd /root/kleatsv2 && rm -rf .next'

      - name: Build (yarn)
        if: contains(steps.detect_pm.outputs.pm, 'yarn')
        env:
          NODE_ENV: production
        run: sudo -n env PATH="$PATH" NODE_ENV="$NODE_ENV" bash -lc 'cd /root/kleatsv2 && corepack yarn build'

      - name: Build (pnpm)
        if: contains(steps.detect_pm.outputs.pm, 'pnpm')
        env:
          NODE_ENV: production
        run: sudo -n env PATH="$PATH" PNPM_HOME="$PNPM_HOME" NODE_ENV="$NODE_ENV" bash -lc 'cd /root/kleatsv2 && corepack pnpm build'

      - name: Build (npm fallback)
        if: steps.detect_pm.outputs.pm == ''
        env:
          NODE_ENV: production
        run: sudo -n env PATH="$PATH" NODE_ENV="$NODE_ENV" bash -lc 'cd /root/kleatsv2 && npm run build'

      - name: Restart service
        run: sudo systemctl restart kleats
